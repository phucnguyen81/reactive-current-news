# Create settings.service

# Organize service layer
Services are like those black-box processes in flow-based programming.
They are created then configured externally to form a network of processes.

- There is a root service that configures other services
- To configure the root service, attach services together (with subscribe())

# Rename current-news to latest-news

# Rename app.service to current-news.service

# Add apiKey for Settings component

- If no api-key, show error
- Ignore fetch without api-key
- Add Apply button to the toolbar
- When Apply is clicked, send api-key-settings event
- On app.component loading, local-storage sends api-key-storage event
- On api-key-settings, update key in current-news.state
- On api-key-settings, save the api key to local storage
- On api-key-storage, set key if key is missing
- On fetching, if the key is missing, set error
- On fetching, if the key is missing, fetching is cancelled

# Create toolbar component with customized action buttons
- The toolbar on latest-news page has 'Fetch' button
- The toolbar on settings page has 'Save' button
=> make toolbar component with customized action buttons

# Learn xstate using this repo for awhile

# From Settings, go back to previous route after Save

# Create use cases

# Describe the app dataflow

# Describe the app main control with statecharts

# Make OpenNewTab event

# Use an icon for 'Today remaining requests'

# Add search box to the top toolbar

# Add 'Fetch' button to the toolbar

# Show error messages (as popup or special card?)

# Show warning if rate limit drops under a threshold

# Abstract away the HttpClient

# Configure apiKey and language
Use local storage as data store for keeping settings

# Configure material themes

# Add timeout settings for fetching news
-   Timeout for HttpClient
-   Timeout for currentsapi

# Prevent doing multiple fetches at the same time
Done at the code level, but let's do the refresh button first so that this can
be tested manually.

# Maintain a fixed number of news cards on screen
When the on-screen news cards drop below a certain threshold, fill it up with
new/available news cards

# Check out examples/ideas for news feed
-   https://news.google.com
-   https://www.newsweek.com/newsfeed

# Switch themes
https://material.angular.io/guide/theming

# Flash the 'Today remaining requests' if it changes
