# Make window control for the window object
-   Call window.open(url, '_blank') to open new tab
-   Failed/sucess => returned from the window.open call

# Design (local) storage to persist state

# Improve status to show recent sequence of (state, event)

# Show error of type Gateway timeout
Example of error shown on console:
[HPM] Error occurred while trying to proxy request /v1/latest-news?language=en from localhost:4200 to https://api.currentsapi.services (ECONNRESET) (https://nodejs.org/api/errors.html#errors_common_system_errors)

# After fetching, notify if there are no changes on the feed

# Run with offline mode

# Move rateLimitRemaining to top info
The rateLimitRemaining is top level info, should not be bound
to the latestNews.

# Learn xstate using this repo for awhile

# From Settings, go back to previous route after Save

# Create use cases

# Describe the app dataflow with Node-RED

# Describe the app main controller logic with statecharts

# Use an icon for 'Today remaining requests'

# Add search box to the top toolbar

# Show warning if rate limit drops under a threshold

# Abstract away the HttpClient

# Configure apiKey and language
Use local storage as data store for keeping settings

# Configure material themes

# Add timeout settings for fetching news
-   Timeout for HttpClient
-   Timeout for currentsapi

# Maintain a fixed number of news cards on screen
When the on-screen news cards drop below a certain threshold, fill it up with
new/available news cards

# Learn angular control design
HttpClient, Router

# Switch themes
https://material.angular.io/guide/theming

# Flash the 'Today remaining requests' if it changes
Also find an icon for it

# Rename current-news component to latest-news

# Escape html on news contents

# Check out examples/ideas for news feed
-   https://news.google.com
-   https://www.newsweek.com/newsfeed

